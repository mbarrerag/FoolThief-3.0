package gui;

import java.util.Arrays;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import logic.TopsController;
import logic.VehicleController;

public class PanelStolenVehicles extends javax.swing.JPanel {

    final String object = "Vehiculo";
    private final ImageIcon ERRORIMG = new ImageIcon(getClass().getResource("/images/img_error.png"));
    private final ImageIcon DANGERIMG = new ImageIcon(getClass().getResource("/images/img_danger.png"));
    DefaultTableModel modelTable;

    /**
     * Creates new form PanelStolenVehicles
     */
    public PanelStolenVehicles() {
        initComponents();
        modelTable = (DefaultTableModel) tableData.getModel();

        fillCombobox();
        cleanForm();
        cleanTable();
        txtLicensePlate.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableData = new javax.swing.JTable();
        lblLicensePlate = new javax.swing.JLabel();
        txtLicensePlate = new javax.swing.JTextField();
        lblBrand = new javax.swing.JLabel();
        txtBrand = new javax.swing.JTextField();
        lblColor = new javax.swing.JLabel();
        cbxColor = new javax.swing.JComboBox<>();
        cbxNeighborhood = new javax.swing.JComboBox<>();
        lblNeighborhood = new javax.swing.JLabel();
        btnNewReport = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        lblReference = new javax.swing.JLabel();
        txtReference = new javax.swing.JTextField();
        lblModusOperandi = new javax.swing.JLabel();
        cbxModusOperandi = new javax.swing.JComboBox<>();

        setMaximumSize(new java.awt.Dimension(780, 600));
        setMinimumSize(new java.awt.Dimension(780, 600));

        lblTitle.setFont(new java.awt.Font("Century Gothic", 0, 30)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Reporte de vehiculos");

        tableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Placa", "Marca", "Referencia", "Color", "Localidad", "Modus"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableData);

        lblLicensePlate.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        lblLicensePlate.setText("Placa:");

        lblBrand.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        lblBrand.setText("Marca:");

        lblColor.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        lblColor.setText("Color:");

        cbxColor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbxNeighborhood.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblNeighborhood.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        lblNeighborhood.setText("Localidad:");

        btnNewReport.setText("Nuevo");
        btnNewReport.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNewReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewReportActionPerformed(evt);
            }
        });

        btnUpdate.setText("Modificar");
        btnUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnSearch.setText("Buscar");
        btnSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnDelete.setText("Eliminar");
        btnDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblReference.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        lblReference.setText("Referencia:");

        lblModusOperandi.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        lblModusOperandi.setText("Modus:");

        cbxModusOperandi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnNewReport, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 722, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lblLicensePlate)
                                            .addGap(58, 58, 58))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(lblReference)
                                            .addGap(18, 18, 18)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtLicensePlate, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txtReference, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblBrand)
                                    .addGap(50, 50, 50)
                                    .addComponent(txtBrand)))
                            .addGap(57, 57, 57)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblColor)
                                        .addGap(54, 54, 54)
                                        .addComponent(cbxColor, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblModusOperandi)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cbxModusOperandi, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblNeighborhood)
                                    .addGap(18, 18, 18)
                                    .addComponent(cbxNeighborhood, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLicensePlate)
                            .addComponent(txtLicensePlate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblBrand)
                            .addComponent(txtBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbxColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblColor))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbxNeighborhood, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNeighborhood))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblReference)
                        .addComponent(txtReference, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbxModusOperandi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblModusOperandi)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNewReport)
                    .addComponent(btnUpdate)
                    .addComponent(btnSearch)
                    .addComponent(btnDelete))
                .addGap(21, 21, 21))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cleanTable() {
        for (int i = 0; i < tableData.getRowCount(); i++) {
            modelTable.removeRow(i);
            i -= 1;
        }
    }

    private void fillTable() {
        cleanTable();
        String[][] data = VehicleController.queryDataTable();
        modelTable.setRowCount(0);
        for (String[] row : data) {
            modelTable.addRow(row);
        }
    }

    private void fillCombobox() {
        cbxNeighborhood.removeAllItems();
        cbxModusOperandi.removeAllItems();
        cbxColor.removeAllItems();

        String[] neighborhoods = TopsController.getNeighborhoods();
        for (String element : neighborhoods) {
            cbxNeighborhood.addItem(element);
        }
        String[] modusOperandi = TopsController.getModusOperandi();
        for (int i = 0; i < 3; i++) {
            cbxModusOperandi.addItem(modusOperandi[i]);
        }
        String[] colors = VehicleController.getColors();
        for (String element : colors) {
            cbxColor.addItem(element);
        }
    }

    private boolean checkEmptyFields() {
        return txtLicensePlate.getText().isEmpty() || txtBrand.getText().isEmpty()
                || txtReference.getText().isEmpty();
    }

    private void cleanForm() {
        txtLicensePlate.setText("");
        txtBrand.setText("");
        txtReference.setText("");
        cbxNeighborhood.setSelectedIndex(0);
        cbxColor.setSelectedIndex(0);
    }

    private String[] getValuesOfFields() {
        String[] data = {txtLicensePlate.getText(), txtBrand.getText(), txtReference.getText(),
            cbxNeighborhood.getSelectedItem().toString(), cbxColor.getSelectedItem().toString(),
            cbxModusOperandi.getSelectedItem().toString()};
        return data;
    }
    // ========================================================================

    private void updateData() {
        int selectedRow = tableData.getSelectedRow();
        String[] data = getValuesOfFields();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Por favor seleccione un reporte.", "Reportes", JOptionPane.OK_OPTION, ERRORIMG);
        } else {
            String id = tableData.getValueAt(selectedRow, 0).toString();
            String neighborhood = tableData.getValueAt(selectedRow, 5).toString();
            String modusOperandi = tableData.getValueAt(selectedRow, 6).toString();
            if (VehicleController.exist(id)) {
                VehicleController.updateReport(id, data);
                TopsController.deleteReportCount(neighborhood, object, modusOperandi);
                TopsController.addReportCount(data[3], object, data[5]);

                System.out.println(Arrays.toString(data));
            } else {
                JOptionPane.showMessageDialog(null, "No existe el reporte a modificar.", "Reportes", JOptionPane.OK_OPTION, ERRORIMG);
            }
        }
    }

    private void btnNewReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewReportActionPerformed
        if (checkEmptyFields()) {
            JOptionPane.showMessageDialog(null, "Por favor, rellene todos los campos del formulario.", "Reportes", JOptionPane.OK_OPTION, ERRORIMG);
            return;
        }

        String[] data = getValuesOfFields();
        VehicleController.addReport(data);

        System.out.println(Arrays.toString(data));

        TopsController.addReportCount(data[3], object, data[5]);
        cleanForm();
        fillTable();
    }//GEN-LAST:event_btnNewReportActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if (checkEmptyFields()) {
            JOptionPane.showMessageDialog(null, "Por favor, rellene todos los campos del formulario.", "Reportes", JOptionPane.OK_OPTION, ERRORIMG);
            return;
        }

        updateData();
        cleanForm();
        fillTable();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String id = JOptionPane.showInputDialog(null, "Inserte el ID del reporte: ", "Reportes", JOptionPane.QUESTION_MESSAGE);
        try {
            if (VehicleController.existReportById(id) == false) {
                JOptionPane.showMessageDialog(null, "Reporte no encontrado, intentelo con otro ID.", "Reportes", JOptionPane.OK_OPTION, DANGERIMG);
                return;
            }
            String[] data = VehicleController.queryReportById(id);

            // Colocar ventana para mostrar datos
            System.out.println(id);
        } catch (NumberFormatException e) {

        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int selectedRow = tableData.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Por favor seleccione un reporte.", "Reportes", JOptionPane.OK_OPTION, DANGERIMG);
            return;
        }

        String id = tableData.getValueAt(selectedRow, 0).toString();
        if (id != null) {
            int dialog = JOptionPane.showConfirmDialog(null, "¿Esta seguro que desea eliminar el registro " + id + "?", "Reportes", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, DANGERIMG);

            if (dialog == JOptionPane.YES_OPTION) {
                if (VehicleController.exist(id)) {
                    String neighborhood = tableData.getValueAt(selectedRow, 5).toString();
                    String modusOperandi = tableData.getValueAt(selectedRow, 6).toString();
                    TopsController.deleteReportCount(neighborhood, object, modusOperandi);
                    VehicleController.deleteReport(id);
                } else {
                    JOptionPane.showMessageDialog(null, "No existe el reporte a eliminar.", "Reportes", JOptionPane.OK_OPTION, ERRORIMG);
                }
            }
            fillTable();
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnNewReport;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbxColor;
    private javax.swing.JComboBox<String> cbxModusOperandi;
    private javax.swing.JComboBox<String> cbxNeighborhood;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBrand;
    private javax.swing.JLabel lblColor;
    private javax.swing.JLabel lblLicensePlate;
    private javax.swing.JLabel lblModusOperandi;
    private javax.swing.JLabel lblNeighborhood;
    private javax.swing.JLabel lblReference;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tableData;
    private javax.swing.JTextField txtBrand;
    private javax.swing.JTextField txtLicensePlate;
    private javax.swing.JTextField txtReference;
    // End of variables declaration//GEN-END:variables
}
