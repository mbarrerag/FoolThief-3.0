package gui;

import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.ImageIcon;

import logic.ReportController;
import logic.TopsController;

public class PanelReports extends javax.swing.JPanel {

    private final ImageIcon ERRORIMG = new ImageIcon(getClass().getResource("/images/img_error.png"));
    private final ImageIcon DANGERIMG = new ImageIcon(getClass().getResource("/images/img_danger.png"));
    DefaultTableModel modelTable;

    /**
     * Creates new form PanelReports
     */
    public PanelReports() {
        initComponents();
        modelTable = (DefaultTableModel) tableData.getModel();

        fillCombobox();
        cleanForm();
        fillTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableData = new javax.swing.JTable();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblDate = new javax.swing.JLabel();
        lblHour = new javax.swing.JLabel();
        lblNeighborhood = new javax.swing.JLabel();
        cbxNeighborhood = new javax.swing.JComboBox<>();
        lblObject = new javax.swing.JLabel();
        cbxObject = new javax.swing.JComboBox<>();
        lblPlace = new javax.swing.JLabel();
        txtBoxPlace = new javax.swing.JScrollPane();
        txtPlace = new javax.swing.JTextArea();
        lblDescription = new javax.swing.JLabel();
        txtBoxDescription = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        lblModalidad = new javax.swing.JLabel();
        btnViewMore = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnNewReport = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        cbxModusOperandi = new javax.swing.JComboBox<>();
        dtchDate = new com.toedter.calendar.JDateChooser();
        txtHour = new javax.swing.JTextField();

        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximumSize(new java.awt.Dimension(780, 600));
        setMinimumSize(new java.awt.Dimension(780, 600));
        setPreferredSize(new java.awt.Dimension(780, 600));

        lblTitle.setFont(new java.awt.Font("Century Gothic", 0, 30)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Reportes");

        tableData.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        tableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Fecha", "Hora", "Localidad", "Objeto", "Modalidad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableData.setRowHeight(18);
        tableData.setSelectionBackground(java.awt.SystemColor.activeCaption);
        tableData.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableData.setShowGrid(true);
        tableData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableData);

        lblName.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        lblName.setText("Nombre:");

        lblDate.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        lblDate.setText("Fecha:");

        lblHour.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        lblHour.setText("Hora:");

        lblNeighborhood.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        lblNeighborhood.setText("Localidad:");

        cbxNeighborhood.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblObject.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        lblObject.setText("Objeto robado:");

        cbxObject.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblPlace.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        lblPlace.setText("Descripción del lugar: ");

        txtPlace.setColumns(20);
        txtPlace.setRows(5);
        txtBoxPlace.setViewportView(txtPlace);

        lblDescription.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        lblDescription.setText("Descripción de lo ocurrido: ");

        txtDescription.setColumns(20);
        txtDescription.setRows(5);
        txtBoxDescription.setViewportView(txtDescription);

        lblModalidad.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        lblModalidad.setText("Modalidad:");

        btnViewMore.setText("Ver mas...");
        btnViewMore.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnViewMore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewMoreActionPerformed(evt);
            }
        });

        btnUpdate.setText("Modificar");
        btnUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Eliminar");
        btnDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnNewReport.setText("Nuevo");
        btnNewReport.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNewReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewReportActionPerformed(evt);
            }
        });

        btnSearch.setText("Buscar");
        btnSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        cbxModusOperandi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnViewMore, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnNewReport, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPlace)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(lblNeighborhood)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                                    .addComponent(cbxNeighborhood, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(lblName)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(lblObject)
                                    .addGap(18, 18, 18)
                                    .addComponent(cbxObject, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(txtBoxPlace, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblDescription)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblModalidad)
                                    .addComponent(lblHour)
                                    .addComponent(lblDate))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cbxModusOperandi, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(dtchDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtHour, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(txtBoxDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1))
                .addGap(45, 45, 45))
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNeighborhood)
                            .addComponent(cbxNeighborhood, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblObject)
                            .addComponent(cbxObject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblPlace))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDate)
                            .addComponent(dtchDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHour)
                            .addComponent(txtHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblModalidad)
                            .addComponent(cbxModusOperandi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(lblDescription)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtBoxDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBoxPlace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNewReport)
                    .addComponent(btnUpdate)
                    .addComponent(btnSearch)
                    .addComponent(btnDelete)
                    .addComponent(btnViewMore))
                .addGap(18, 18, 18))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cleanTable() {
        for (int i = 0; i < tableData.getRowCount(); i++) {
            modelTable.removeRow(i);
            i -= 1;
        }
    }

    private void fillTable() {
        cleanTable();
        String[][] data = ReportController.queryDataTable();
        modelTable.setRowCount(0);
        for (String[] row : data) {
            modelTable.addRow(row);
        }
    }

    private void fillCombobox() {
        cbxNeighborhood.removeAllItems();
        cbxObject.removeAllItems();
        cbxModusOperandi.removeAllItems();

        String[] neighborhoods = TopsController.getNeighborhoods();
        for (String element : neighborhoods) {
            cbxNeighborhood.addItem(element);
        }
        String[] objects = TopsController.getObjects();
        for (String element : objects) {
            cbxObject.addItem(element);
        }
        String[] modusOperandi = TopsController.getModusOperandi();
        for (String element : modusOperandi) {
            cbxModusOperandi.addItem(element);
        }
    }

    private boolean checkEmptyFields() {
        return txtName.getText().isEmpty() || txtHour.getText().isEmpty()
                || txtDescription.getText().isEmpty() || txtPlace.getText().isEmpty()
                || dtchDate.getDate() == null;
    }

    private void cleanForm() {
        txtName.setText("");
        txtHour.setText("00:00");
        txtPlace.setText("");
        txtDescription.setText("");
        cbxNeighborhood.setSelectedIndex(0);
        cbxObject.setSelectedIndex(0);
        cbxModusOperandi.setSelectedIndex(0);
    }

    private String[] getValuesOfFields() {
        Calendar calendar = dtchDate.getCalendar();
        int day = calendar.get(Calendar.DATE);
        int month = calendar.get(Calendar.MONTH);
        int year = calendar.get(Calendar.YEAR);
        String date = day + "/" + month + "/" + year;
        String[] data = {txtName.getText(), date, txtHour.getText(), cbxNeighborhood.getSelectedItem().toString(), cbxObject.getSelectedItem().toString(), cbxModusOperandi.getSelectedItem().toString(), txtPlace.getText(), txtDescription.getText()};

        return data;
    }
    // ========================================================================

    private void updateData() {
        int selectedRow = tableData.getSelectedRow();
        String[] data = getValuesOfFields();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Por favor seleccione un reporte.", "Reportes", JOptionPane.OK_OPTION, ERRORIMG);
        } else {
            String id = tableData.getValueAt(selectedRow, 0).toString();
            String neighborhood = tableData.getValueAt(selectedRow, 3).toString();
            String object = tableData.getValueAt(selectedRow, 4).toString();
            String modusOperandi = tableData.getValueAt(selectedRow, 5).toString();
            if (ReportController.exist(id)) {
                ReportController.updateReport(id, data);
                TopsController.deleteReportCount(neighborhood, object, modusOperandi);
                TopsController.addReportCount(data[3], data[4], data[5]);
            } else {
                JOptionPane.showMessageDialog(null, "No existe el reporte a modificar.", "Reportes", JOptionPane.OK_OPTION, ERRORIMG);
            }
        }
    }

    private void btnNewReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewReportActionPerformed
        if (checkEmptyFields()) {
            JOptionPane.showMessageDialog(null, "Por favor, rellene todos los campos del formulario.", "Reportes", JOptionPane.OK_OPTION, ERRORIMG);
            return;
        }

        String[] data = getValuesOfFields();
        ReportController.addReport(data);
        TopsController.addReportCount(data[3], data[4], data[5]);
        cleanForm();
        fillTable();
    }//GEN-LAST:event_btnNewReportActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if (checkEmptyFields()) {
            JOptionPane.showMessageDialog(null, "Por favor, rellene todos los campos del formulario.", "Reportes", JOptionPane.OK_OPTION, ERRORIMG);
            return;
        }

        updateData();
        cleanForm();
        fillTable();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String id = JOptionPane.showInputDialog(null, "Inserte el ID del reporte: ", "Reportes", JOptionPane.QUESTION_MESSAGE);
        try {
            if (ReportController.existReport(id) == false) {
                JOptionPane.showMessageDialog(null, "Reporte no encontrado, intentelo con otro ID.", "Reportes", JOptionPane.OK_OPTION, DANGERIMG);
                return;
            }
            String[] data = ReportController.queryReportById(id);
            ReportWindow reportWindow = new ReportWindow(data);
            reportWindow.setLocationRelativeTo(null);
        } catch (NumberFormatException e) {

        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int selectedRow = tableData.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Por favor seleccione un reporte.", "Reportes", JOptionPane.OK_OPTION, DANGERIMG);
            return;
        }

        String id = tableData.getValueAt(selectedRow, 0).toString();
        if (id != null) {
            int dialog = JOptionPane.showConfirmDialog(null, "¿Esta seguro que desea eliminar el registro " + id + "?", "Reportes", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, DANGERIMG);

            if (dialog == JOptionPane.YES_OPTION) {
                if (ReportController.exist(id)) {
                    String neighborhood = tableData.getValueAt(selectedRow, 3).toString();
                    String object = tableData.getValueAt(selectedRow, 4).toString();
                    String modusOperandi = tableData.getValueAt(selectedRow, 5).toString();
                    TopsController.deleteReportCount(neighborhood, object, modusOperandi);
                    ReportController.deleteReport(id);
                } else {
                    JOptionPane.showMessageDialog(null, "No existe el reporte a eliminar.", "Reportes", JOptionPane.OK_OPTION, ERRORIMG);
                }
            }
            fillTable();
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnViewMoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewMoreActionPerformed
        int selectedRow = tableData.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Por favor seleccione un reporte.", "Reportes", JOptionPane.OK_OPTION, DANGERIMG);
            return;
        }
        try {
            String id = tableData.getValueAt(selectedRow, 0).toString();
            if (ReportController.existReport(id) == false) {
                JOptionPane.showMessageDialog(null, "Reporte no encontrado, intentelo con otro ID.", "Reportes", JOptionPane.OK_OPTION, DANGERIMG);
                return;
            }
            String[] data = ReportController.queryReportById(id);
            ReportWindow reportWindow = new ReportWindow(data);
            reportWindow.setLocationRelativeTo(null);
        } catch (NumberFormatException e) {

        }
    }//GEN-LAST:event_btnViewMoreActionPerformed

    private void tableDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDataMouseClicked
        int selectedRow = tableData.getSelectedRow();
    }//GEN-LAST:event_tableDataMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnNewReport;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnViewMore;
    private javax.swing.JComboBox<String> cbxModusOperandi;
    private javax.swing.JComboBox<String> cbxNeighborhood;
    private javax.swing.JComboBox<String> cbxObject;
    private com.toedter.calendar.JDateChooser dtchDate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblHour;
    private javax.swing.JLabel lblModalidad;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblNeighborhood;
    private javax.swing.JLabel lblObject;
    private javax.swing.JLabel lblPlace;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tableData;
    private javax.swing.JScrollPane txtBoxDescription;
    private javax.swing.JScrollPane txtBoxPlace;
    private javax.swing.JTextArea txtDescription;
    private javax.swing.JTextField txtHour;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextArea txtPlace;
    // End of variables declaration//GEN-END:variables
}
